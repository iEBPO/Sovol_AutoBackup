[gcode_macro PRINTER_PARAM]
variable_z_safe_pause: 0.0
variable_z_safe_g28: 3.0
variable_max_x_position: 350.0
variable_max_y_position: 350.0
variable_max_z_position: 345.0
variable_fans: 3
variable_auto_g29: 0
variable_fan0_min: 25
variable_fan1_min: 50
variable_fan2_min: 180
variable_fan2_speed: 0
variable_hotend_temp: 0
variable_e_min_current: 0.27

# The following variables are settings for KAMP as a whole:
variable_verbose_enable: True               # Set to True to enable KAMP information output when running. This is useful for debugging.

# The following variables are for adjusting Adaptive Meshing settings for KAMP:
variable_mesh_margin: 0                     # Expands the mesh size in millimeters if desired. Leave at 0 to disable.
variable_fuzz_amount: 0                     # Slightly randomizes mesh points to spread out wear from nozzle-based probes. Leave at 0 to disable.

# The following variables are for adjusting Adaptive Line Purging settings for KAMP:
variable_purge_height: 0.8                  # Z position of nozzle during purge. Default is 0.8.
variable_tip_distance: 0                    # Distance between tip of filament and nozzle before purge. Should be similar to PRINT_END final retract amount. Default is 0.
variable_purge_margin: 15                   # Distance the purge will be in front of the print area. Default is 10.
variable_purge_amount: 50                   # Amount of filament to be purged prior to printing. Default is 50.
variable_flow_rate: 12                      # Flow rate of purge in mm3/s. Default is 12.

# The following variables are for adjusting the Smart Park feature for KAMP, which will park the printhead near the print area at a specified height:
variable_smart_park_height: 5              # Z position for Smart Park. Default is 10.

gcode:

[gcode_macro _SMART_PARK]
description: Parks your printhead near the print area for pre-print hotend heating.
gcode:
    {% set kamp_settings = printer["gcode_macro PRINTER_PARAM"] %}
    {% set bed_x_max = printer["gcode_macro PRINTER_PARAM"].max_x_position | float %}
    {% set bed_y_max = printer["gcode_macro PRINTER_PARAM"].max_y_position | float %}                                                                           
    {% set z_height = kamp_settings.smart_park_height | float %}
    {% set purge_margin = kamp_settings.purge_margin | float %}
    {% set purge_amount = kamp_settings.purge_amount | float %}
    {% set verbose_enable = kamp_settings.verbose_enable | abs %}
    {% set center_x = bed_x_max / 2 %}
    {% set center_y = bed_y_max / 2 %}
    {% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
    {% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
    {% set x_min = (all_points | map(attribute=0) | min | default(0)) %}
    {% set x_max = (all_points | map(attribute=0) | max | default(0)) %}
    {% set y_min = (all_points | map(attribute=1) | min | default(0)) %}
    {% set y_max = (all_points | map(attribute=1) | max | default(0)) %}
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 / 2| float %}
    {% set rapid_move = 10 %}
    {% set park_x_center = ([((x_max + x_min) / 2) - (purge_amount / 2), 0] | max) %}
    {% set park_y_center = ([((y_max + y_min) / 2) - (purge_amount / 2), 0] | max) %}
    {% if (park_x_center + purge_amount + rapid_move) > bed_x_max %}
        {% set park_x_center = (bed_x_max - (purge_amount + rapid_move)) %}
    {% endif %}
    {% if (park_y_center + purge_amount + rapid_move) > bed_y_max %}
        {% set park_y_center = (bed_y_max - (purge_amount + rapid_move)) %}
    {% endif %}
    {% set park_x_origin_low = (x_min - purge_margin) %}                                         
    {% set park_x_origin_high = (x_max + purge_margin) %}                                        
    {% set park_y_origin_low = (y_min - purge_margin) %}                                         
    {% set park_y_origin_high = (y_max + purge_margin) %}
    {% set detect_object = (x_min + x_max + y_min + y_max) %}
    {% if detect_object == 0 %}
        {% set x_min = 0 %}
        {% set y_min = 0 %}
        {% set z_height = 0.6 %}
    {% elif park_y_origin_low > 0 %}
        {% set x_min = park_x_center %}
        {% set y_min = park_y_origin_low %}
    {% elif park_x_origin_low > 0 %}
        {% set x_min = park_x_origin_low %}
        {% set y_min = park_y_center %}
    {% elif park_y_origin_high < bed_y_max %}
        {% set x_min = park_x_center %}
        {% set y_min = park_y_origin_high %}
    {% elif park_x_origin_high < bed_x_max %}
        {% set x_min = park_x_origin_high %}
        {% set y_min = park_y_center %}
    {% else %}
        {% set x_min = 0 %}
        {% set y_min = 0 %}
        {% set z_height = 0.6 %}
    {% endif %}

    {% if verbose_enable == True %}
        RESPOND TYPE=command MSG="Smart Park location: {x_min},{y_min}"
    {% endif %}
    SAVE_GCODE_STATE NAME=Presmartpark_State 
    G90
    {% if printer.toolhead.position.z < z_height %}
        G0 Z{z_height}
    {% endif %}
    G0 X{x_min} Y{y_min} F{travel_speed}
    G0 Z{z_height}
    RESTORE_GCODE_STATE NAME=Presmartpark_State 

[gcode_macro _LINE_PURGE]
description: A purge macro that adapts to be near your actual printed objects
gcode:
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
    {% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
    {% if printer.firmware_retraction is defined %}
        {% set RETRACT = G10 | string %}
        {% set UNRETRACT = G11 | string %}
    {% else %}
        {% set RETRACT = 'G1 E-0.5 F2400' | string %}
        {% set UNRETRACT = 'G1 E0.5 F2400' | string %}
    {% endif %}
    {% set bed_x_max = printer["gcode_macro PRINTER_PARAM"].max_x_position | float %}
    {% set bed_y_max = printer["gcode_macro PRINTER_PARAM"].max_y_position | float %}
    {% set verbose_enable = printer["gcode_macro PRINTER_PARAM"].verbose_enable | abs %}
    {% set purge_height = printer["gcode_macro PRINTER_PARAM"].purge_height | float %}
    {% set tip_distance = printer["gcode_macro PRINTER_PARAM"].tip_distance | float %}
    {% set purge_margin = printer["gcode_macro PRINTER_PARAM"].purge_margin | float %}
    {% set purge_amount = printer["gcode_macro PRINTER_PARAM"].purge_amount | float %}
    {% set flow_rate = printer["gcode_macro PRINTER_PARAM"].flow_rate | float %}
    {% set rapid_move = 10 %}
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
    {% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
    {% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
    {% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
    {% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
    {% set detect_object = purge_x_min + purge_x_max + purge_y_min + purge_y_max %}
    {% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
    {% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
    {% if (purge_x_center + purge_amount + rapid_move) > bed_x_max %}
        {% set purge_x_center = (bed_x_max - (purge_amount + rapid_move)) %}
    {% endif %}
    {% if (purge_y_center + purge_amount + rapid_move) > bed_y_max %}
        {% set purge_y_center = (bed_y_max - (purge_amount + rapid_move)) %}
    {% endif %}
    {% set purge_x_origin_low = (purge_x_min - purge_margin) %}
    {% set purge_x_origin_high = (purge_x_max + purge_margin) %}
    {% set purge_y_origin_low = (purge_y_min - purge_margin) %}
    {% set purge_y_origin_high = (purge_y_max + purge_margin) %}
    {% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
    G91
    {% if cross_section < 5 %}
        RESPOND TYPE=command MSG="[Extruder] max_extrude_cross_section is insufficient for line purge, please set it to 5 or greater. Purge skipped."
    {% else %}
        {% if verbose_enable == True %}
            RESPOND TYPE=command MSG="Moving filament tip {tip_distance}mm"
        {% endif %}
        {% if detect_object == 0 %}
            RESPOND TYPE=command MSG="No object detected! Using classic purge line."
        {% elif purge_y_origin_low > 0 %}
            RESPOND TYPE=command MSG="KAMP line purge starting at {purge_x_center}, {purge_y_origin_low} and purging {purge_amount}mm of filament, requested flow rate is {flow_rate}mm3/s."
        {% elif purge_x_origin_low > 0 %}
            RESPOND TYPE=command MSG="KAMP line purge starting at {purge_x_origin_low}, {purge_y_center} and purging {purge_amount}mm of filament, requested flow rate is {flow_rate}mm3/s."
        {% elif purge_y_origin_high < bed_y_max %}
            RESPOND TYPE=command MSG="KAMP line purge starting at {purge_x_center}, {purge_y_origin_high} and purging {purge_amount}mm of filament, requested flow rate is {flow_rate}mm3/s."
        {% elif purge_x_origin_high < bed_x_max %}
            RESPOND TYPE=command MSG="KAMP line purge starting at {purge_x_origin_high}, {purge_y_center} and purging {purge_amount}mm of filament, requested flow rate is {flow_rate}mm3/s."
        {% else %}
             RESPOND TYPE=command MSG="No space for purge line! Using classic purge line."
        {% endif %}
        SAVE_GCODE_STATE NAME=Prepurge_State
        {% if detect_object == 0 %}
            _STANDARD_CLEANING_LINE
        {% elif purge_y_origin_low > 0 %}
            G92 E0
            G0 F{travel_speed}
            G90
            G0 X{purge_x_center} Y{purge_y_origin_low}
            G0 Z{purge_height}
            M83
            G1 E{tip_distance} F{purge_move_speed}
            G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
            {RETRACT}
            G0 X{purge_x_center + purge_amount + rapid_move} F{travel_speed}         
            G92 E0
            M82
            G0 Z{purge_height * 2} F{travel_speed}
        {% elif purge_x_origin_low > 0 %}
            G92 E0
            G0 F{travel_speed}
            G90
            G0 X{purge_x_origin_low} Y{purge_y_center}
            G0 Z{purge_height}
            M83
            G1 E{tip_distance} F{purge_move_speed}
            G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
            {RETRACT}
            G0 Y{purge_y_center + purge_amount + rapid_move} F{travel_speed}
            G92 E0
            M82
            G0 Z{purge_height * 2} F{travel_speed}
        {% elif purge_y_origin_high < bed_y_max %}
            G92 E0
            G0 F{travel_speed}
            G90
            G0 X{purge_x_center} Y{purge_y_origin_high}
            G0 Z{purge_height}
            M83
            G1 E{tip_distance} F{purge_move_speed}
            G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
            {RETRACT}
            G0 X{purge_x_center + purge_amount + rapid_move} F{travel_speed}
            G92 E0
            M82
            G0 Z{purge_height * 2} F{travel_speed}
        {% elif purge_x_origin_high < bed_x_max %}
            G92 E0
            G0 F{travel_speed}
            G90
            G0 X{purge_x_origin_high} Y{purge_y_center}
            G0 Z{purge_height}
            M83
            G1 E{tip_distance} F{purge_move_speed}
            G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
            {RETRACT}
            G0 Y{purge_y_center + purge_amount + rapid_move} F{travel_speed}
            G92 E0
            M82
            G0 Z{purge_height * 2} F{travel_speed}
        {% else %}
            _STANDARD_CLEANING_LINE_BACK
        {% endif %}
        RESTORE_GCODE_STATE NAME=Prepurge_State
    {% endif %}

[gcode_macro _STANDARD_CLEANING_LINE]
description: Standard cleaning line
gcode:
    M117 No line

    
[gcode_macro _STANDARD_CLEANING_LINE_BACK]
description: Standard cleaning line
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

    #G90
    #G1 X0 F9000
    #G1 Y20
    #G1 Z0.600 F600
    #G1 Y0 F9000
    #M400
    G91
    M83
#    M140 S[bed_temperature_initial_layer_single] ;set bed temp
#    M104 S[nozzle_temperature_initial_layer] ;set extruder temp
#    M190 S[bed_temperature_initial_layer_single] ;wait for bed temp
#    M109 S[nozzle_temperature_initial_layer];wait for extruder temp
    G1 E25 F300
    G4 P1000
    G1 E-0.200 Z5 F600
    G1 X88.000 F9000
    G1 Z-5.000 F600
    G1 X87.000 E20.88 F1800
    G1 X87.000 E13.92 F1800
    G1 Y1 E0.16 F1800
    G1 X-87.000 E13.92 F1800
    G1 X-87.000 E20.88 F1800
    G1 Y1 E0.24 F1800
    G1 X87.000 E20.88 F1800
    G1 X87.000 E13.92 F1800
    G1 E-0.200 Z1 F600
    M400